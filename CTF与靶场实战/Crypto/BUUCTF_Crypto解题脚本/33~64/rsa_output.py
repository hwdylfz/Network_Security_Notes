from math import gcd
import gmpy2
from Crypto.Util.number import long_to_bytes
import gzip

n=6266565720726907265997241358331585417095726146341989755538017122981360742813498401533594757088796536341941659691259323065631249
e1=773
e2=839

c1=3453520592723443935451151545245025864232388871721682326408915024349804062041976702364728660682912396903968193981131553111537349
c2=5672818026816293344070119332536629619457163570036305296869053532293105379690793386019065754465292867769521736414170803238309535
print(gcd(e1,e2))
#1  说明满足条件
s = gmpy2.gcdext(e1,e2)#important method!!!
print(s[1])
#(mpz(1), mpz(-201), mpz(152))  求出s1，s2
m = pow(c1,s[1],n)*pow(c2,s[2],n)%n
print (m)
#1021089710312311910410111011910111610410511010710511610511511211111511510598108101125
#flag=hex(result)[2:].decode('hex')
result=str(m)
flag=""
i=0
while i < len(result):
    if result[i]=='1':
        c=chr(int(result[i:i+3]))
        i+=3
    else:
        c=chr(int(result[i:i+2]))
        i+=2
    flag+=c
print(flag)